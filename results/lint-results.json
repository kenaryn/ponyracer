[{"filePath":"/home/aurele/dev/ponyracer/cypress/e2e/home.cy.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":2,"column":3,"nodeType":null,"messageId":"insert","endLine":2,"endColumn":3,"fix":{"range":[32,32],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":3,"column":5,"nodeType":null,"messageId":"insert","endLine":3,"endColumn":5,"fix":{"range":[84,84],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":4,"column":1,"nodeType":null,"messageId":"insert","endLine":4,"endColumn":1,"fix":{"range":[99,99],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":5,"column":3,"nodeType":null,"messageId":"insert","endLine":5,"endColumn":3,"fix":{"range":[137,137],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":7,"column":1,"nodeType":null,"messageId":"insert","endLine":7,"endColumn":1,"fix":{"range":[142,142],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··` with `····`","line":8,"column":1,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":3,"fix":{"range":[181,183],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":10,"column":1,"nodeType":null,"messageId":"insert","endLine":10,"endColumn":1,"fix":{"range":[216,216],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":11,"column":1,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":5,"fix":{"range":[256,260],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":12,"column":1,"nodeType":null,"messageId":"insert","endLine":12,"endColumn":1,"fix":{"range":[275,275],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":13,"column":1,"nodeType":null,"messageId":"insert","endLine":13,"endColumn":1,"fix":{"range":[318,318],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":14,"column":3,"nodeType":null,"messageId":"insert","endLine":14,"endColumn":3,"fix":{"range":[358,358],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":16,"column":1,"nodeType":null,"messageId":"insert","endLine":16,"endColumn":1,"fix":{"range":[363,363],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":17,"column":5,"nodeType":null,"messageId":"insert","endLine":17,"endColumn":5,"fix":{"range":[433,433],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":18,"column":1,"nodeType":null,"messageId":"replace","endLine":18,"endColumn":5,"fix":{"range":[459,463],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":19,"column":1,"nodeType":null,"messageId":"insert","endLine":19,"endColumn":1,"fix":{"range":[478,478],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":20,"column":1,"nodeType":null,"messageId":"insert","endLine":20,"endColumn":1,"fix":{"range":[521,521],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":22,"column":5,"nodeType":null,"messageId":"insert","endLine":22,"endColumn":5,"fix":{"range":[575,575],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":23,"column":1,"nodeType":null,"messageId":"insert","endLine":23,"endColumn":1,"fix":{"range":[596,596],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":24,"column":1,"nodeType":null,"messageId":"replace","endLine":24,"endColumn":5,"fix":{"range":[635,639],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":25,"column":3,"nodeType":null,"messageId":"insert","endLine":25,"endColumn":3,"fix":{"range":[682,682],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··` with `····`","line":27,"column":1,"nodeType":null,"messageId":"replace","endLine":27,"endColumn":3,"fix":{"range":[687,689],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":28,"column":1,"nodeType":null,"messageId":"insert","endLine":28,"endColumn":1,"fix":{"range":[730,730],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":29,"column":5,"nodeType":null,"messageId":"insert","endLine":29,"endColumn":5,"fix":{"range":[753,753],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":30,"column":1,"nodeType":null,"messageId":"insert","endLine":30,"endColumn":1,"fix":{"range":[792,792],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":31,"column":1,"nodeType":null,"messageId":"insert","endLine":31,"endColumn":1,"fix":{"range":[850,850],"text":"  "}}],"suppressedMessages":[],"errorCount":25,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":25,"fixableWarningCount":0,"source":"describe('Ponyracer', () => {\n  it('should display title on home page', () => {\n    cy.visit('/');\n    cy.contains('h1', 'Ponyracer');\n  });\n\n  const navbarBrand = '.navbar-brand';\n  const navbarLink = '.nav-link';\n\n  it('should display a navbar', () => {\n    cy.visit('/');\n    cy.contains(navbarBrand, 'PonyRacer');\n    cy.contains(navbarLink, 'Races');\n  });\n\n  it('should display a navbar collapsed on small screen', () => {\n    cy.viewport('iphone-6+');\n    cy.visit('/');\n    cy.contains(navbarBrand, 'PonyRacer');\n    cy.get(navbarLink).should('not.be.visible');\n\n    // toggle the navbar\n    cy.get('.navbar-toggler').click();\n    cy.get(navbarLink).should('be.visible');\n  });\n\n  it('should display a race list', () => {\n    cy.visit('/');\n    cy.get('h2').should('have.length', 2);\n    cy.get('.container ul li').should('have.length', 10);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/experiments_bench/donothing.directive.ts","messages":[{"ruleId":"@angular-eslint/directive-selector","severity":2,"message":"The selector should start with one of these prefixes: \"pr\" (https://angular.dev/style-guide#style-02-08)","line":4,"column":15,"nodeType":"Literal","messageId":"prefixFailure","endLine":4,"endColumn":66}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Directive } from '@angular/core';\n\n@Directive({\n    selector: '<div.pr-loggable[logText]:not([notLoggable=true])',\n    standalone: true\n})\nexport class DoNothingDirective {\n    constructor() {\n        console.log('Do no thing directive.');\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/experiments_bench/onchanges.directive.ts","messages":[{"ruleId":"@angular-eslint/directive-selector","severity":2,"message":"The selector should be camelCase (https://angular.dev/style-guide#style-02-06)","line":4,"column":15,"nodeType":"Literal","messageId":"styleFailure","endLine":4,"endColumn":37}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Directive, OnChanges, SimpleChanges, Input } from '@angular/core';\n\n@Directive({\n    selector: '[pr-changeDirective]',\n    standalone: true\n})\nexport class OnChangesDirective implements OnChanges {\n    @Input({ required: true }) pony!: string;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const ponyValue = changes['pony'];\n        console.log(`changed value from ${ponyValue.previousValue} to ${ponyValue.currentValue}`);\n        console.log(`Is this the first change? ${ponyValue.isFirstChange()}`);\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/experiments_bench/ondestroy.directive.ts","messages":[{"ruleId":"@angular-eslint/directive-selector","severity":2,"message":"The selector should be camelCase (https://angular.dev/style-guide#style-02-06)","line":4,"column":15,"nodeType":"Literal","messageId":"styleFailure","endLine":4,"endColumn":38}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Directive, OnDestroy } from '@angular/core';\n\n@Directive({\n    selector: '[pr-destroyDirective]',\n    standalone: true\n})\nexport class OnDestroyDirective implements OnDestroy {\n    sayHi: number;\n\n    constructor() {\n        this.sayHi = window.setInterval(() => console.log('Hi!'), 3000);\n    }\n\n    ngOnDestroy(): void {\n        window.clearInterval(this.sayHi);\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/experiments_bench/oninit.directive.ts","messages":[{"ruleId":"@angular-eslint/directive-selector","severity":2,"message":"The selector should be camelCase (https://angular.dev/style-guide#style-02-06)","line":5,"column":15,"nodeType":"Literal","messageId":"styleFailure","endLine":5,"endColumn":35}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Directive, OnInit, Input } from '@angular/core';\nimport { PonyModel } from '../models/pony.model';\n\n@Directive({\n    selector: '[pr-initDirective]',\n    standalone: true\n})\nexport class OnInitDirective implements OnInit {\n    @Input({ required: true }) pony!: PonyModel;\n\n    ngOnInit(): void {\n        console.log(`Those inputs use a special lifecycle phase onInit: ${this.pony.name}`);\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/experiments_bench/setter.directive.ts","messages":[{"ruleId":"@angular-eslint/directive-selector","severity":2,"message":"The selector should be camelCase (https://angular.dev/style-guide#style-02-06)","line":4,"column":15,"nodeType":"Literal","messageId":"styleFailure","endLine":4,"endColumn":37}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Directive, Input } from '@angular/core';\n\n@Directive({\n    selector: '[pr-setterDirective]',\n    standalone: true\n})\nexport class SetterDirective {\n    private ponyModel!: string;\n\n    @Input()\n    set pony(newPony: string) {\n        console.log(`changed to ${this.ponyModel} to ${newPony}`);\n        this.ponyModel = newPony;\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/experiments_bench/simpletext.directive.ts","messages":[{"ruleId":"@angular-eslint/directive-selector","severity":2,"message":"The selector should be camelCase (https://angular.dev/style-guide#style-02-06)","line":4,"column":15,"nodeType":"Literal","messageId":"styleFailure","endLine":4,"endColumn":30}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Directive, Input } from '@angular/core';\n\n@Directive({\n    selector: '[pr-loggable]',\n    standalone: true\n})\nexport class SimpleTextDirective {\n    @Input()\n    set logText(value: string) {\n        console.log(value);\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/pony/pony.component.ts","messages":[{"ruleId":"@angular-eslint/no-output-rename","severity":2,"message":"Output bindings should not be aliased (https://angular.dev/style-guide#style-05-13)","line":14,"column":13,"nodeType":"Literal","messageId":"noOutputRename","endLine":14,"endColumn":27,"suggestions":[{"messageId":"suggestRemoveAliasName","fix":{"range":[373,387],"text":""},"desc":"Remove alias name"},{"messageId":"suggestReplaceOriginalNameWithAliasName","fix":{"range":[373,405],"text":") readonly ponySelected"},"desc":"Remove alias name and use it as the original name"}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { PonyModel } from '../models/pony.model';\n\n@Component({\n    selector: 'pr-pony',\n    standalone: true,\n    imports: [],\n    templateUrl: './pony.component.html',\n    styleUrl: './pony.component.css'\n})\nexport class PonyComponent {\n    @Input({ required: true }) pony!: PonyModel;\n\n    @Output('ponySelected') readonly emitter = new EventEmitter<PonyModel>();\n\n    selectPony(): void {\n        this.emitter.emit(this.pony);\n    }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/race/race.component.spec.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":7,"column":3,"nodeType":null,"messageId":"insert","endLine":7,"endColumn":3,"fix":{"range":[216,216],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":8,"column":1,"nodeType":null,"messageId":"insert","endLine":8,"endColumn":1,"fix":{"range":[234,234],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":9,"column":1,"nodeType":null,"messageId":"insert","endLine":9,"endColumn":1,"fix":{"range":[262,262],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":12,"column":1,"nodeType":null,"messageId":"insert","endLine":12,"endColumn":1,"fix":{"range":[345,345],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":13,"column":5,"nodeType":null,"messageId":"insert","endLine":13,"endColumn":5,"fix":{"range":[378,378],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":14,"column":1,"nodeType":null,"messageId":"insert","endLine":14,"endColumn":1,"fix":{"range":[386,386],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":15,"column":5,"nodeType":null,"messageId":"insert","endLine":15,"endColumn":5,"fix":{"range":[409,409],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `······`","line":16,"column":1,"nodeType":null,"messageId":"insert","endLine":16,"endColumn":1,"fix":{"range":[419,419],"text":"      "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `······` with `············`","line":17,"column":1,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":7,"fix":{"range":[473,479],"text":"            "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `······`","line":18,"column":1,"nodeType":null,"messageId":"insert","endLine":18,"endColumn":1,"fix":{"range":[525,525],"text":"      "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `······` with `············`","line":19,"column":1,"nodeType":null,"messageId":"replace","endLine":19,"endColumn":7,"fix":{"range":[582,588],"text":"            "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `······` with `············`","line":20,"column":1,"nodeType":null,"messageId":"replace","endLine":20,"endColumn":7,"fix":{"range":[639,645],"text":"            "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":21,"column":1,"nodeType":null,"messageId":"insert","endLine":21,"endColumn":1,"fix":{"range":[692,692],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":22,"column":5,"nodeType":null,"messageId":"insert","endLine":22,"endColumn":5,"fix":{"range":[703,703],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":23,"column":1,"nodeType":null,"messageId":"insert","endLine":23,"endColumn":1,"fix":{"range":[739,739],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··` with `····`","line":27,"column":1,"nodeType":null,"messageId":"replace","endLine":27,"endColumn":3,"fix":{"range":[782,784],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··` with `····`","line":29,"column":1,"nodeType":null,"messageId":"replace","endLine":29,"endColumn":3,"fix":{"range":[839,841],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":30,"column":1,"nodeType":null,"messageId":"replace","endLine":30,"endColumn":5,"fix":{"range":[897,901],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":31,"column":1,"nodeType":null,"messageId":"replace","endLine":31,"endColumn":5,"fix":{"range":[961,965],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":33,"column":1,"nodeType":null,"messageId":"insert","endLine":33,"endColumn":1,"fix":{"range":[991,991],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":34,"column":1,"nodeType":null,"messageId":"replace","endLine":34,"endColumn":5,"fix":{"range":[1064,1068],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":35,"column":5,"nodeType":null,"messageId":"insert","endLine":35,"endColumn":5,"fix":{"range":[1126,1126],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":36,"column":1,"nodeType":null,"messageId":"replace","endLine":36,"endColumn":5,"fix":{"range":[1173,1177],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":37,"column":1,"nodeType":null,"messageId":"insert","endLine":37,"endColumn":1,"fix":{"range":[1266,1266],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":38,"column":5,"nodeType":null,"messageId":"insert","endLine":38,"endColumn":5,"fix":{"range":[1382,1382],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":39,"column":1,"nodeType":null,"messageId":"insert","endLine":39,"endColumn":1,"fix":{"range":[1429,1429],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":40,"column":5,"nodeType":null,"messageId":"insert","endLine":40,"endColumn":5,"fix":{"range":[1524,1524],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":41,"column":1,"nodeType":null,"messageId":"replace","endLine":41,"endColumn":5,"fix":{"range":[1579,1583],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":42,"column":1,"nodeType":null,"messageId":"insert","endLine":42,"endColumn":1,"fix":{"range":[1636,1636],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":43,"column":1,"nodeType":null,"messageId":"replace","endLine":43,"endColumn":5,"fix":{"range":[1698,1702],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":44,"column":1,"nodeType":null,"messageId":"replace","endLine":44,"endColumn":5,"fix":{"range":[1761,1765],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":45,"column":1,"nodeType":null,"messageId":"insert","endLine":45,"endColumn":1,"fix":{"range":[1822,1822],"text":"  "}}],"suppressedMessages":[],"errorCount":32,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":32,"fixableWarningCount":0,"source":"import { Component, signal } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { RaceModel } from '../models/race.model';\nimport { RaceComponent } from './race.component';\n\n@Component({\n  standalone: true,\n  imports: [RaceComponent],\n  template: '<pr-race [raceModel]=\"race()\" />'\n})\nexport class RaceTestComponent {\n  race = signal<RaceModel>({\n    id: 12,\n    name: 'Paris',\n    ponies: [\n      { id: 1, name: 'Gentle Pie', color: 'YELLOW' },\n      { id: 2, name: 'Big Soda', color: 'ORANGE' },\n      { id: 3, name: 'Gentle Bottle', color: 'PURPLE' },\n      { id: 4, name: 'Superb Whiskey', color: 'GREEN' },\n      { id: 5, name: 'Fast Rainbow', color: 'BLUE' }\n    ],\n    startInstant: '2024-02-18T08:02:00'\n  });\n}\n\ndescribe('RaceComponent', () => {\n  beforeEach(() => TestBed.configureTestingModule({}));\n\n  it('should display a race name and its ponies', () => {\n    const fixture = TestBed.createComponent(RaceTestComponent);\n    fixture.detectChanges();\n\n    // then we should have the name and ponies displayed in the template\n    const element = fixture.nativeElement as HTMLElement;\n    const raceName = element.querySelector('h2')!;\n    expect(raceName).withContext('You need an h2 element for the race name').not.toBeNull();\n    expect(raceName.textContent).withContext('The h2 element should contain the race name').toContain('Paris');\n    const ponies = element.querySelectorAll('li');\n    expect(ponies.length).withContext('You should have one li elements per pony').toBe(5);\n    expect(ponies[0].textContent).toContain('Gentle Pie');\n    expect(ponies[1].textContent).toContain('Big Soda');\n    expect(ponies[2].textContent).toContain('Gentle Bottle');\n    expect(ponies[3].textContent).toContain('Superb Whiskey');\n    expect(ponies[4].textContent).toContain('Fast Rainbow');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/aurele/dev/ponyracer/src/app/races/races.component.spec.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":7,"column":3,"nodeType":null,"messageId":"insert","endLine":7,"endColumn":3,"fix":{"range":[243,243],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":9,"column":3,"nodeType":null,"messageId":"insert","endLine":9,"endColumn":3,"fix":{"range":[300,300],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":10,"column":1,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":5,"fix":{"range":[340,344],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":11,"column":5,"nodeType":null,"messageId":"insert","endLine":11,"endColumn":5,"fix":{"range":[405,405],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `····` with `········`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":5,"fix":{"range":[430,434],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":13,"column":1,"nodeType":null,"messageId":"insert","endLine":13,"endColumn":1,"fix":{"range":[477,477],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `····`","line":14,"column":5,"nodeType":null,"messageId":"insert","endLine":14,"endColumn":5,"fix":{"range":[551,551],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":15,"column":1,"nodeType":null,"messageId":"insert","endLine":15,"endColumn":1,"fix":{"range":[642,642],"text":"  "}}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"import { TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { RaceComponent } from '../race/race.component';\nimport { RacesComponent } from './races.component';\n\ndescribe('RacesComponent', () => {\n  beforeEach(() => TestBed.configureTestingModule({}));\n\n  it('should display every race', () => {\n    const fixture = TestBed.createComponent(RacesComponent);\n    fixture.detectChanges();\n    const debugElement = fixture.debugElement;\n    const races = debugElement.queryAll(By.directive(RaceComponent));\n    expect(races.length).withContext('You should have two `RaceComponent` displayed').toBe(2);\n  });\n});\n","usedDeprecatedRules":[]}]